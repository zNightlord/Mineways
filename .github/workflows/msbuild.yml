name: "MSBuild"

on:
  pull_request:
    branches: 
      - master
      - github-actions
  push:
    branches: 
      - master
      - github-actions

env:
  # Path to the solution file relative to the root of the project.
  MINEWAYS: .\Mineways.sln
  CHANNELMIXER: .\ChannelMixer\ChannelMixer.sln
  TILEMAKER: .\tilemaker\TileMaker.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

  # Platform to build
  PLATFORM: x64

jobs:
  mineways:
    name: "Mineways build"
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    
    # Starts ChannelMixer
    - name: Build ChannelMixer
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.CHANNELMIXER}} /p:Platform=${{env.PLATFORM}}

    # Starts TileMaker
    - name: Build TileMaker
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.TILEMAKER}} /p:Platform=${{env.PLATFORM}}

    # Starts Mineways
    - name: Build Mineways
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.MINEWAYS}} /p:Platform=${{env.PLATFORM}}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: release
        path: | 
          !*.git*
          !*.obj
          !*.iobj
          !*.recipe
          !*.ipdb
          !*.pdb
          !*.tlog
          !*.res
          !*.pch
          !*.pl
          !*.mdl
 
        # path: .\x64\Release\
        if-no-files-found: warn

    # For Release Upload
    # - name: Release
    #   uses: softprops/action-gh-release@v1
    #   if: startsWith(github.ref, 'refs/tags/')
    #   with:
    #    files: release.zip
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        
